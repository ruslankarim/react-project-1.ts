{"version":3,"sources":["Button.tsx","Container.tsx","Link.tsx","Input.tsx","index.tsx"],"names":["Button","_ref","type","disabled","children","className","rest","Object","objectWithoutProperties","_excluded","react_default","a","createElement","assign","clsx","Container","Link","href","Link_excluded","Input","placeholder","name","Input_excluded","App","Fragment","src_Container","src_Link","src_Button","src_Input","render","src_App","document","querySelector"],"mappings":"mNAoBeA,EAX0C,SAAHC,GAAyD,IAAnDC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAAUC,EAAQH,EAARG,SAAUC,EAASJ,EAATI,UAAcC,EAAIC,OAAAC,EAAA,EAAAD,CAAAN,EAAAQ,GACtG,OACEC,EAAAC,EAAAC,cAAA,SAAAL,OAAAM,OAAA,CACER,UAAWS,YAAKT,EAAW,aAC3BH,KAAMA,EACNC,SAAUA,GAAcG,GACvBF,ICPQW,EANa,SAAHd,GAAmB,IAAdG,EAAQH,EAARG,SAC1B,OACAM,EAAAC,EAAAC,cAAA,OAAKP,UAAU,gBAAgBD,2BCWpBY,EAPsC,SAAHf,GAAoC,IAA9BgB,EAAIhB,EAAJgB,KAAMZ,EAASJ,EAATI,UAAcC,EAAIC,OAAAC,EAAA,EAAAD,CAAAN,EAAAiB,GAE5E,OACIR,EAAAC,EAAAC,cAAA,IAAAL,OAAAM,OAAA,CAAGR,UAAWS,YAAKT,EAAW,WAAYY,KAAMA,GAAUX,GAAOW,gDCY1DE,EAZwC,SAAHlB,GAAuD,IAAjDC,EAAID,EAAJC,KAAMkB,EAAWnB,EAAXmB,YAAaC,EAAIpB,EAAJoB,KAAoBf,GAALL,EAATI,UAAkBE,OAAAC,EAAA,EAAAD,CAAAN,EAAAqB,IACjG,OACIZ,EAAAC,EAAAC,cAAA,QAAAL,OAAAM,OAAA,CACIR,UAAWS,YAAK,gBAChBM,YAAaA,EACbC,KAAMA,EACNnB,KAAMA,GACFI,KCVViB,EAAgB,WACpB,OACEb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACAd,EAAAC,EAAAC,cAACa,EAAS,KACRf,EAAAC,EAAAC,cAACc,EAAI,CAACT,KAAK,sCACXP,EAAAC,EAAAC,cAACe,EAAM,CAACzB,KAAK,SAASC,UAAQ,GAAC,UAC/BO,EAAAC,EAAAC,cAACgB,EAAK,CACNR,YAAY,sBACZC,KAAK,QACLnB,KAAK,YAOX2B,iBAAOnB,EAAAC,EAAAC,cAACkB,EAAG,MAAKC,SAASC,cAAc","file":"static/js/main.27fac707.chunk.js","sourcesContent":["import React, { ButtonHTMLAttributes, PropsWithChildren } from \"react\";\nimport clsx from \"clsx\";\n\ntype ButtonProps = {\n  type?: ButtonHTMLAttributes<HTMLButtonElement>[\"type\"]\n  disabled?: ButtonHTMLAttributes<HTMLButtonElement>[\"disabled\"]\n  className?: string\n}\n\nconst Button: React.FC<PropsWithChildren<ButtonProps>> = ({ type, disabled, children, className, ...rest }) => {\n  return (\n    <button\n      className={clsx(className, \"ui-button\")}\n      type={type}\n      disabled={disabled} {...rest}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button","import React from \"react\"\n\nconst Container: React.FC = ({children}) => {\n    return (\n    <div className=\"ui-container\">{children}</div>\n    )\n}\n\nexport default Container","import React, { PropsWithChildren } from 'react'\nimport clsx from \"clsx\";\n\ntype LinkProps = {\n    href?: string\n    className?: string\n}\n\nconst Link: React.FC<PropsWithChildren<LinkProps>> = ({ href, className, ...rest}) => {\n\n    return (\n        <a className={clsx(className, \"ui-link\")} href={href} {...rest}>{href}</a>\n    )\n}\n\nexport default Link","import React, { PropsWithChildren, InputHTMLAttributes } from 'react'\nimport clsx from \"clsx\";\n\ntype InputProps = {\n    type?: InputHTMLAttributes<HTMLInputElement>[\"type\"] | \"text\"\n    placeholder?: string | \"default placeholder\"\n    name?: InputHTMLAttributes<HTMLInputElement>[\"name\"] | \"default name\"\n    className?: string\n}\n\n\nconst Input: React.FC<PropsWithChildren<InputProps>> = ({ type, placeholder, name, className, ...rest}) => {\n    return (\n        <input\n            className={clsx(\"ui-textfield\")}\n            placeholder={placeholder}\n            name={name}\n            type={type}\n            {...rest}\n        />\n    )\n}\n\nexport default Input","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport Button from \"./Button\";\nimport Container from \"./Container\";\nimport Link from \"./Link\";\nimport Input from \"./Input\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n    <Container>\n      <Link href=\"https://www.guidedao.xyz/solidity\"/>\n      <Button type=\"button\" disabled>Button</Button>\n      <Input\n      placeholder=\"Type something here\"\n      name=\"input\"\n      type=\"text\"\n      ></Input>\n    </Container>\n    </>\n  );\n}\n\nrender(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}